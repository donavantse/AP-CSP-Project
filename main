import pygame
import random

# Initialize Pygame
pygame.init()

# Define colors
BLACK = (0, 0, 0)
WHITE = (255, 255, 255)
RED = (255, 0, 0)

# Define fonts
FONT_TITLE = pygame.font.SysFont(None, 72)
FONT_MENU = pygame.font.SysFont(None, 36)
FONT_GAME = pygame.font.SysFont(None, 48)

# Define window size
WINDOW_SIZE = (800, 600)

# Create window
screen = pygame.display.set_mode(WINDOW_SIZE)

# Set window title
pygame.display.set_caption("Hangman Game")

# Define menu function
def menu():
    # Set background color
    screen.fill(WHITE)

    # Draw title
    title_text = FONT_TITLE.render("Hangman Game", True, BLACK)
    screen.blit(title_text, ((WINDOW_SIZE[0] - title_text.get_width()) / 2, 50))

    # Draw menu options
    option1_text = FONT_MENU.render("Play Game", True, BLACK)
    screen.blit(option1_text, ((WINDOW_SIZE[0] - option1_text.get_width()) / 2, 200))

    option2_text = FONT_MENU.render("Quit", True, BLACK)
    screen.blit(option2_text, ((WINDOW_SIZE[0] - option2_text.get_width()) / 2, 250))

    # Update display
    pygame.display.flip()

    # Wait for player to select an option
    while True:
        for event in pygame.event.get():
            if event.type == pygame.QUIT:
                pygame.quit()
                quit()

            if event.type == pygame.MOUSEBUTTONDOWN:
                mouse_pos = pygame.mouse.get_pos()
                if 300 < mouse_pos[0] < 500 and 180 < mouse_pos[1] < 220:
                    # Start game
                    return True
                elif 350 < mouse_pos[0] < 450 and 230 < mouse_pos[1] < 270:
                    # Quit game
                    pygame.quit()
                    quit()

# Define game function
def game():
    # Set background color
    screen.fill(WHITE)

    # Draw title
    title_text = FONT_TITLE.render("Hangman Game", True, BLACK)
    screen.blit(title_text, ((WINDOW_SIZE[0] - title_text.get_width()) / 2, 50))

    # Choose a word
    words = ["hippo", "alligator", "banana", "apple", "human", "monkey", "lucky", "cave", "honey", "sunglasses", "clock", "phone", "light", "watch"]
    word = random.choice(words)

    #Create a list of underscores to represent the letters in the word
    underscores = ["_" for letter in word]

    #Number of allowed guesses
    guesses = []
    max_guesses = 6
    num_guesses = 0

    # Loop 
    while True:
        #Underscores for the word that has to be guessed
        word_text = FONT_GAME.render(" ".join(underscores), True, BLACK)
        screen.blit(word_text, ((WINDOW_SIZE[0] - word_text.get_width()) / 2, 200))

        # Draw guessed letters
        guessed_text = FONT_GAME.render("Guesses: " + ", ".join(guesses), True, BLACK)
        screen.blit(guessed_text, ((WINDOW_SIZE[0] - guessed_text.get_width()) / 2, 300))

        # Draw hangman based on number of incorrect guesses
        if num_guesses == 0:
            pass
        elif num_guesses == 1:
                    pygame.draw.circle(screen, BLACK, (400, 150), 30)
        elif num_guesses == 2:
            # Draw body
            pygame.draw.line(screen, BLACK, (400, 180), (400, 350), 5)
        elif num_guesses == 3:
            # Draw left arm
            pygame.draw.line(screen, BLACK, (400, 220), (360, 270), 5)
        elif num_guesses == 4:
            # Draw right arm
            pygame.draw.line(screen, BLACK, (400, 220), (440, 270), 5)
        elif num_guesses == 5:
            # Draw left leg
            pygame.draw.line(screen, BLACK, (400, 350), (360, 420), 5)
        elif num_guesses == 6:
        # Draw right leg and end game
            pygame.draw.line(screen, BLACK, (400, 350), (440, 420), 5)
        game_over_text = FONT_GAME.render("Game Over! The word was " + word, True, RED)
        screen.blit(game_over_text, ((WINDOW_SIZE[0] - game_over_text.get_width()) / 2, 500))
        pygame.display.flip()
        pygame.time.wait(3000)
        return

    # Update display
    pygame.display.flip()

    # Check for player input
    for event in pygame.event.get():
        if event.type == pygame.QUIT:
            pygame.quit()
            quit()

        if event.type == pygame.KEYDOWN:
            if event.unicode.isalpha():
                # Check if the guessed letter is in the word
                guess = event.unicode.lower()
                if guess in word:
                    # Replace underscore with guessed letter
                    for i in range(len(word)):
                        if word[i] == guess:
                            underscores[i] = guess
                else:
                    # Add incorrect guess to list and increment number of incorrect guesses
                    guesses.append(guess)
                    num_guesses += 1

                # Check if the game is over
                if "_" not in underscores:
                    # Player has won
                    win_text = FONT_GAME.render("Congratulations! You win!", True, BLACK)
                    screen.blit(win_text, ((WINDOW_SIZE[0] - win_text.get_width()) / 2, 500))
                    pygame.display.flip()
                    pygame.time.wait(3000)
                    return

while True:
    if menu():
        game()
    else:
        pygame.quit()
        quit()
